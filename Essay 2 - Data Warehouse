1. Please create dimension tables dim_user , dim_post , and dim_date to store
normalized data from the raw tables
==================================================
CREATE TABLE dim_user (
  user_id SERIAL PRIMARY KEY,
  user_name VARCHAR(100),
  country VARCHAR(50));

CREATE TABLE dim_post (
  post_id SERIAL PRIMARY KEY,
  post_text VARCHAR(500),
  post_date DATE,
  user_id INT REFERENCES dim_user(user_id));

CREATE TABLE dim_date (
  date_id SERIAL PRIMARY KEY,
  post_date DATE);

2. Populate the dimension tables by inserting data from the related raw tables
=====================================================================

INSERT INTO dim_user (user_id, user_name, country)
SELECT DISTINCT user_id, user_name, country
FROM raw_users;

INSERT INTO dim_post (post_id, post_text, post_date, user_id)
SELECT DISTINCT post_id, post_text, post_date, user_id
FROM raw_posts;

INSERT INTO dim_date (post_date)
SELECT DISTINCT post_date
FROM raw_posts;


3. Create a fact table called fact_post_performance to store metrics like post views and
likes over time
===================================================================

CREATE TABLE fact_post_performance (
  fact_id SERIAL PRIMARY KEY,
  post_id INT REFERENCES dim_post(post_id),
  date_id INT REFERENCES dim_date(date_id),
  views INT,
  likes INT);



4. Populate the fact table by joining and aggregating data from the raw tables
=======================================================

INSERT INTO fact_post_performance (post_id, date_id, views, likes)
SELECT rp.post_id, dd.date_id, COUNT(rp.post_id) AS views, COUNT(rl.like_id) AS likes
FROM raw_posts rp
JOIN dim_date dd ON rp.post_date = dd.post_date
LEFT JOIN raw_likes rl ON rp.post_id = rl.post_id
GROUP BY rp.post_id, dd.date_id;


5. Please create a fact_daily_posts table to capture the number of posts per user perday
===============================================

CREATE TABLE fact_daily_posts (
  fact_id SERIAL PRIMARY KEY,
  user_id INT REFERENCES dim_user(user_id),
  date_id INT REFERENCES dim_date(date_id),
  posts_count INT);

6. Also populate the fact table by joining and aggregating data from the raw tables
================================================

INSERT INTO fact_daily_posts (user_id, date_id, posts_count)
SELECT rp.user_id, dd.date_id, COUNT(rp.post_id) AS posts_count
FROM raw_posts rp
JOIN dim_date dd ON rp.post_date = dd.post_date
GROUP BY rp.user_id, dd.date_id;

